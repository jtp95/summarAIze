{"1": "arXiv:quant-ph/0603226v2  3 Oct 2006\nOne-way Quantum Computation\nDan Brownea and Hans Briegelb\naDepartments of Materials and Physics, Oxford University, United Kingdom.\nbInstitute for Theoretical Physics, University of Innsbruck and Institute for Quantum Optics\n& Quantum Information (IQOQI) of the Austrian Academy of Sciences, Austria.\n1\nIntroduction\nThe circuit model of quantum computation [1, 2, 3] has been a powerful tool for the devel-\nopment of quantum computation, acting both as a framework for theoretical investigations\nand as a guide for experiment. In the circuit model (also called the network model), unitary\noperations are represented by a network of elementary quantum gates such as the CNOT gate\nand single-qubit rotations. Many proposals for the implementation of quantum computation\nare designed around this model, including physical prescriptions for implementing the ele-\nmentary gates. By formulating quantum computation in a different way, one can gain both a\nnew framework for experiments and new theoretical insights. One-way quantum computation\n[4] has achieved both of these.\nMeasurements on entangled states play a key role in many quantum information proto-\ncols, such as quantum teleportation and entanglement-based quantum key distribution. In\nthese applications an entangled state is required, which must be generated beforehand. Then,\nduring the protocol, measurements are made which convert the quantum correlations into,\nfor example, a secret key. To repeat the protocol a fresh entangled state must be prepared.\nIn this sense, the entangled state, or the quantum correlations embodied by the state, can be\nconsidered a resource which is \u201cused up\u201d in the protocol.\nIn one-way quantum computation, the quantum correlations in an entangled state called\na cluster state [6] or graph state [7] are exploited to allow universal quantum computation\nthrough single-qubit measurements alone. The quantum algorithm is speci\ufb01ed in the choice\nof bases for these measurements and the \u201cstructure\u201d of the entanglement (as explained below)\nof the resource state. The name \u201cone-way\u201d re\ufb02ects the resource nature of the graph state. The\nstate can be used only once, and (irreversible) projective measurements drive the computation\nforward, in contrast to the reversibility of every gate in the standard network model.\nIn this chapter, we will provide an introduction to one-way quantum computation, and\nseveral of the techniques one can use to describe it. In this section we will introduce graph\nand cluster states and develop a notation for general single-qubit measurements. In section 2\nwe will introduce the key concepts of one-way quantum computation with some simple ex-\namples. After this, in section 3, we shall investigate how one-way quantum computation can\n1\n", "2": "Figure 1:\nOne way quantum computation consists of single-qubit measurements in certain\nbases and in a certain order on an entangled resource state. Cluster states have a square lattice\nstructure (a) while the freedom of choosing speci\ufb01c general graph states such as illustrated in\n(b) can reduce the number of qubits needed for a given computation signi\ufb01cantly.\nbe described without using the quantum circuit model. To this end, we shall introduce a num-\nber of important tools including the stabilizer formalism, the logical Heisenberg picture and\na representation of unitary operations especially well suited to the one-way quantum compu-\ntation model. In section 4, we will brie\ufb02y describe a number of proposals for implementing\none-way quantum computation in the laboratory. In section 5 we will conclude with a brief\nsurvey of some recent research developments in measurement-based quantum computation.\nA different perspective of one-way quantum computation and measurement-based com-\nputation in general can be found in these recent reviews [8, 9]. A comprehensive tutorial and\nreview on the properties of graph states can be found in [10].\n1.1\nCluster states and graph states\nCluster states and graph states can be de\ufb01ned constructively in the following way [6, 10].\nWith each state, we associate a graph, a set of vertices and edges connecting vertex pairs.\nEach vertex on the graph corresponds to a qubit. The corresponding \u201cgraph state\u201d may be\ngenerated by preparing every qubit in the state |+\u27e9= (1/\n\u221a\n2)(|0\u27e9+ |1\u27e9) and applying a\ncontrolled \u03c3z (CZ) operation |0\u27e9\u27e80|\u22971l+|1\u27e9\u27e81|\u2297\u03c3z on every pair of qubits whose vertices are\nconnected by a graph edge. Cluster states are a sub-class of graph states, whose underlying\ngraph is an n\u2212dimensional square grid. The extra \ufb02exibility in the entanglement structure\nof graph states means that they often require far fewer qubits to implement the same one-\nway quantum computation. However, there are a number of physical implementations where\nthe regular layout of cluster states means that they can be generated very ef\ufb01ciently (see\nsection 4).\n2\n", "3": "1.2\nSingle-qubit measurements and rotations\nSingle-qubit measurements in a variety of bases play a key role in one-way quantum compu-\ntation, so here we introduce a convenient and compact way to describe them. Using a Bloch\nsphere picture, every projective single-qubit measurement can be associated with a unit vec-\ntor on the sphere, which corresponds to the +1 eigenstate of the measurement. We can then\nparameterize observables by the co-latitude \u03b8 and longitude \u03c6 of this vector (illustrated in\n\ufb01gure 2). We shall write this compactly as a pair of angles (\u03b8, \u03c6).\nUnitary operations corresponding to rotations on the Bloch sphere have the following\nform. A rotation around the k axis (where k is x, y, or z) by angle \u03c6 can be written\nUk(\u03c6) = e\u2212i\u03c6\n2 \u03c3k\n(1)\nFor brevity and clarity, we will use the notation X \u2261\u03c3x, etc. in the rest of this chapter. We\nalso adopt standard notation for the eigenstates of Z and X:\nZ|0\u27e9= |0\u27e9\n\u2212Z|1\u27e9= |1\u27e9\nX|+\u27e9= |+\u27e9\u2261\n1\n\u221a\n2(|0\u27e9+ |1\u27e9)\n\u2212X|\u2212\u27e9= |\u2212\u27e9\u2261\n1\n\u221a\n2(|0\u27e9\u2212|1\u27e9)\n(2)\nA measurement with angles (\u03b8, \u03c6) corresponds to a measurement of the observable Uz(\u03c6+\n\u03c0/2)Ux(\u03b8)ZUx(\u2212\u03b8)Uz(\u2212\u03c6\u2212\u03c0/2). One way of implementing such a measurement is to ap-\nply the single-qubit unitary Ux(\u2212\u03b8)Uz(\u2212\u03c6 \u2212\u03c0/2) to the qubit before measuring it in the\ncomputational basis.\n2\nSimple examples\nMany of the features of one-way quantum computation can be illustrated in a simple two-\nqubit example. Consider the following simple protocol; a qubit is prepared in an unknown\nstate |\u03c8\u27e9= \u03b1|0\u27e9+ \u03b2|1\u27e9. A second qubit is prepared in the state |+\u27e9=\n1\n\u221a\n2(|0\u27e9+ |1\u27e9). A CZ\noperation is applied on the two qubits.The state of the qubits is then\n1\n\u221a\n2 (\u03b1|0\u27e9|+\u27e9+ \u03b2|1\u27e9|\u2212\u27e9) .\n(3)\nThe \ufb01rst qubit is now measured in the basis {(1/\n\u221a\n2)(|0\u27e9\u00b1 ei\u03c6|1\u27e9)}, where \u03c6 is a real\nparameter. Using the notation introduced in section 1.2 this measurement is denoted (\u03c0/2, \u03c6).\nThis corresponds, in the Bloch sphere picture, to a unit vector in the x-y plane at angle \u03c6 to\nthe x axis. There are two possible outcomes to the measurement, which occur with equal\nprobability. If the measurement returns the +1 eigenvalue, the second qubit will be projected\ninto the state\n\u03b1|+\u27e9+ ei\u03c6\u03b2|\u2212\u27e9.\n(4)\n3\n", "4": "Figure 2:\nSingle-qubit projective measurements will be represented by the pair of angles\n(\u03b8, \u03c6) of the co-latitude \u03b8 and longitude \u03c6 of their +1 eigenstate on the Bloch sphere. This\ncorresponds to a measurement of the observable Uz(\u03c6+\u03c0/2)Ux(\u03b8)ZUx(\u2212\u03b8)Uz(\u2212\u03c6\u2212\u03c0/2).\nIf the \u22121 eigenvalue is found the state of qubit two becomes\n\u03b1|+\u27e9\u2212ei\u03c6\u03b2|\u2212\u27e9.\n(5)\nWe can represent both possibilities in a compact way if we introduce the binary digit m \u2208\n{0, 1} to represent a measurement outcome of (\u22121)m. The state of qubit two can then be\nwritten, up to a global phase,\nXmHUz(\u03c6)|\u03c8\u27e9.\n(6)\nWe see that the unknown input state which was prepared on the \ufb01rst qubit has been trans-\nferred to qubit two without any loss of coherence. In addition to this it has undergonea unitary\ntransformation: XmHUz(\u03c6). Notice that the angle of the rotation Uz(\u03c6) is set in the choice\nof measurement basis. The unitary transformation HUz(\u03c6) is accompanied by an additional\nPauli transformation (X) when the measurement outcome is \u22121. This is a typical feature of\none-way quantum computation; due to the randomness of the measurement outcomes, any\ndesired unitary can be implemented only up to random but known Pauli transformations.\nSince these Pauli operators are an undesired by-product of implementing the unitary in the\none-way model, we call them \u201cby-product operators\u201d [4, 5]. As we shall see below, these ex-\ntra Pauli operations can be accounted for by altering the basis of later measurements, making\nthe scheme deterministic but introducing an unavoidable time-ordering.\nIn \ufb01gure 3 (a), this protocol is represented using a graphical notation that we will use\nthroughout this chapter. The input qubit is represented by a square, and the output qubit\n4\n", "5": "Figure 3:\nThe one-way graph and measurement patterns for a) the single-qubit operation\nHUz(\u03c6) and b) an arbitrary single-qubit operation, Uz(\u03b3)Ux(\u03b2)Uz(\u03b1), when the measure-\nment angles are set \u03c61 = \u03b1, \u03c62 = (\u22121)m1\u03b2 and \u03c63 = (\u22121)m2\u03b3, and ma is the binary\nmeasurement outcome of the measurement on qubit a. Note that this imposes an ordering\nin the measurements of this pattern. This second pattern is made by composing three copies\nof the pattern (a) with differing measurement angles as described in the text. Pattern (c)\nimplements a CZ operation. Input and output qubits coincide for this pattern.\nby a lozenge, a smaller square tilted at 45\u25e6. The CZ operation applied to the two qubits is\nrepresented by a line between them. This is an example of a one-way graph and measurement\npattern, or \u201cone-way pattern\u201d for short, a convenient representation which speci\ufb01es both the\nentanglement graph for the resource state and the measurements required to implement a\nunitary operation (always up to a known but random Pauli transformation) in the one-way\nmodel. As an alternative to this graphical approach, an algebraic representation of one-way\npatterns called the \u201cmeasurement calculus\u201d has been developed recently [12].\nSo far, the protocol described above seems rather different from the description of one-\nway quantum computation as a series of measurements on a special entangled resource state.\nWe shall see below how the two pictures are related. First however, we show how one-way\npatterns may be connected together to perform consecutive operations.\n2.1\nConnecting one-way patterns - arbitrary single-qubit operations\nDue to Euler\u2019s rotation theorem any single-qubit SU(2) rotation can be decomposed as a prod-\nuct of three rotations Uz(\u03b3)Ux(\u03b2)Uz(\u03b1). Thus, by repeating the simple two-qubit protocol\nthree times, any arbitrary single-qubit rotation may be obtained (up to an extra Hadamard,\nwhich can be accounted for). Two one-way patterns are combined as one would expect, the\noutput qubit(s) of one pattern become the input qubit(s) of the next. The main issue in con-\nnecting patterns together is to track the effect of the Pauli by-product operators which have\naccumulated due to the previous measurements.\nConcatenating the two-qubit protocol three times, with different angles \u03c61, \u03c62 and \u03c63\ngives the one-way pattern illustrated in \ufb01gure 3 (b). To see the effect of the by-product\noperators from each measurement, let us label the binary outcome from each ma. The unitary\nimplemented by the combined pattern is therefore\nU = HZm3Uz(\u03c63)HZm2Uz(\u03c62)HZm1Uz(\u03c61).\n(7)\n5\n", "6": "Since HZH = X and HUz(\u03c6)H = Ux(\u03c6) this can be rewritten\nHZm3Uz(\u03c63)Xm2Ux(\u03c62)Zm1Uz(\u03c61).\n(8)\nWe can rewrite this further using the identities XUz(\u03c6) = Uz(\u2212\u03c6)X and ZUx(\u03c6) = Ux(\u2212\u03c6)Z,\nXm3Zm2Xm1HUz((\u22121)m2\u03c63)Ux((\u22121)m1\u03c62)Uz(\u03c61).\n(9)\nNow we have split up the operation in the same way as the two-qubit example, a unitary\nplus a known Pauli correction. In this case, however, this unitary is not deterministic \u2013 the\nsign of two of the rotations depends on two of the measurements. Nevertheless, if we perform\nthe measurements sequentially and choose measurement angles \u03c61 = \u03b1, \u03c62 = (\u22121)m1\u03b2 and\n\u03c63 = (\u22121)m2\u03b3, we obtain deterministically the desired single-qubit unitary.\nThe dependency of measurement bases on the outcome of previous measurements is a\ngeneric feature of one-way quantum computation, occurring for all but a special class of oper-\nations, the Clifford group (described below). This dependency means that there is a minimum\nnumber of time-steps in which any one-way quantum computation can be implemented, as\ndiscussed further in section 3.\nThe Pauli corrections remaining at the end of the implemented one-way quantum compu-\ntation are unimportant and never need to be physically applied; they can always be accounted\nfor in the interpretation of the \ufb01nal measurement outcome. For example, if the \ufb01nal state is\nto be read out in the computational basis any extra Z operations commute with the measure-\nments and have no effect on their outcome. Any X operations simply \ufb02ip the measurement\nresult, and thus can be corrected via classical post-processing.\n2.2\nGraph states as a resource\nIt is worth discussing how the above description of one-way patterns relates to the descrip-\ntion of one-way quantum computation in the introduction, namely as measurements on an\nentangled resource state. The \ufb01rst observation is that, given a one-way pattern, all of the\nmeasurements can be made after all the CZ operations have been implemented. Secondly,\nquantum algorithms usually begin by initializing qubits to a \ufb01ducial starting state. This state\nis usually |0\u27e9on each qubit, but the state |+\u27e9would be equally suitable. When the input\nqubits of a one-way graph measurement pattern are prepared in |+\u27e9, then the entangled state\ngenerated by the CZ gates is a graph state. Thus the graph state can be considered a resource\nfor this quantum computation. We shall see in section 4 that for certain implementations,\nsuch as in linear optics, the resource description is especially apt.\n2.3\nTwo-qubit gates\nSo far we have seen how an arbitrary single-qubit operation could be achieved in one-way\nquantum computation in a simple linear one-way pattern. However, for universal quantum\ncomputation, entangling two-qubit gates are necessary. One such gate is a CZ gate. There is a\nparticularly simple way in which the CZ can be implemented within the one-way framework.\nThis is simply to use the CZ represented by a single graph-state edge to implement the CZ\ndirectly. This leads to the one-way pattern illustrated in \ufb01gure 2 (c). Notice that here the input\nqubits are also the output qubits. This is indicated by the superimposed squares and lozenges.\n6\n", "7": "2.4\nCluster-state quantum computing\nIn a number of proposed implementations of one-way quantum computation (see section 4)\nsquare lattice cluster states can be generated ef\ufb01ciently and arbitrarily connected graph states\nare hard to make. The simple method outlined above for the construction of one way pat-\nterns will usually lead to graph state layouts which do not have a square lattice structure.\nNevertheless, a cluster state on a large enough square lattice of two or more dimensions is\nstill suf\ufb01cient to implement any unitary [4]. A number of measurement patterns for quantum\ngates designed speci\ufb01cally for two-dimensional square lattice cluster states can be found in\n[5].\n3\nBeyond quantum circuit simulation\nWe have shown that the one-way quantum computer can implement deterministically a uni-\nversal set of gates and thus any quantum computation. However, part of the power of one-way\nquantum computation derives from the fact that unitary operations can be implemented more\ncompactly than a naive network construction would suggest [11]. In fact we shall see in the\nfollowing sections that other ways of decomposing unitary operations are more natural and\nuseful. The main tool we shall use in our investigation of these properties is the stabilizer\nformalism.\n3.1\nStabilizer formalism\nThe stabilizer formalism [13, 14] is a powerful tool for understanding the properties of graph\nstates and one-way quantum computation. Stabilizer formalism is a framework whereby\nstates and sub-spaces over multiple qubits are described and characterized in a compact way\nin terms of operators under which they are invariant. In standard quantum mechanics one\nuses complete sets of commuting observables in a similar fashion, such as in the description\nof atomic states by \u201cquantum numbers\u201d (see e.g. [17]).\nAn operator K stabilizes a subspace S when, for all states |\u03c8\u27e9\u2208S,\nK|\u03c8\u27e9= |\u03c8\u27e9.\n(10)\nIn other words, |\u03c8\u27e9is an eigenstate of K with eigenvalue +1.\nIn the stabilizer formalism one focuses on operators which, in addition to this stabilizing\nproperty, are Hermitian members of the Pauli group, i.e. tensor products of Pauli and identity\noperators. The key principle of the stabilizer formalism is to identify a set of such stabilizing\noperators which uniquely de\ufb01nes a given state or sub-space - i.e. there is no state outside the\nsub-space (for a speci\ufb01ed system) which the same set of operators also jointly stabilizes. The\nsub-spaces (and states) which can be de\ufb01ned uniquely using stabilizing operators from the\nPauli group are called stabilizer sub-spaces (or stabilizer states).\nStabilizer states and sub-spaces occur widely in quantum information science and include\nBell states, GHZ states, many error-correcting codes, and, of course, graph states and cluster\nstates. Note that there are other joint eigenstates of the stabilizing operators with some \u22121\neigenvalues. However, only states with +1 eigenvalue are \u201cstabilized\u201d, by de\ufb01nition. This\n7\n", "8": "set of operators then embodies all the properties of the state and can allow an easier analysis,\nfor example, of how the state transforms under measurement and unitary evolution. Since the\nproduct of two stabilizing operators is itself stabilizing, the set of operators which stabilize\na sub-space has a group structure. It is called the stabilizer group or simply the stabilizer of\nthe sub-space. The group can be compactly expressed by identifying a set of generators. For\na k-qubit sub-space in an n qubit system, n \u2212k generators are required (see exercise 2).\nWe do not have enough space here for a detailed introduction to all of the techniques\nof stabilizer formalism \u2013 excellent introductions can be found in [3, 13] \u2013 but instead we\nwill focus on those which are useful for understanding one-way quantum computation. Most\nwill be stated without proof but can be veri\ufb01ed using the properties of Pauli group operators\ndescribed in [3].\nA simple example of a stabilizer state is the state |+\u27e9. Its stabilizer group is generated by\nX alone. The stabilizer for the tensor product state |+\u27e9\u2297n is then generated by n operators\nKa = Xa acting on each qubit a. From this we can derive the stabilizer generators for\ngraph states. Consider a stabilizer state transformed by the unitary transformation V . The\nstabilizers of the transformed state are then given by V KaV \u2020. Since the CZ gate transforms\nX \u22971l to X \u2297Z under conjugation, we \ufb01nd that the stabilizer generators for graph states have\nthe form\nKa = Xa\nY\nb\u2208N(a)\nZb\n(11)\nfor every qubit a in the graph. N(a) is the neighbourhood of a, i.e. the set of qubits sharing\nedges with a on the graph (this corresponds to nearest neighbours in a cluster state).\n3.2\nA logical Heisenberg picture\nWe are going to use the stabilizer formalism to understand the one-way patterns which im-\nplement unitary transformations in the one-way model. We shall see that it is convenient to\ndescribe logical action of a one-way pattern in a logical Heisenberg picture [14].\nThe Schr\u00a8odinger picture is the most common approach to describing the time-evolution\nof quantum systems. Temporal changes in the system are re\ufb02ected in changes in the state\nvector or density matrix, e.g. for unitary evolution |\u03c8\u27e97\u2192U(t)|\u03c8\u27e9or \u03c1 7\u2192U(t)|\u03c8\u27e9\u03c1U(t)\u2020.\nThe observables which characterize measurable quantities, such as Pauli observables X, Y\nand Z, remain invariant in time. In the Heisenberg picture, on the other hand, time-evolution\nis carried exclusively by physical observables which evolve O(t) 7\u2192U(t)\u2020OU(t). States and\ndensity matrices remain constant in time.\nA logical Heisenberg picture, also called a \u201cHeisenberg representation of quantum com-\nputation\u201d [14], is a middle-way between these two approaches, containing elements of both.\nWe shall introduce it with an example, starting in the Schr\u00a8odinger picture with a single-qubit\ndensity matrix \u03c1(t) evolving in time. Since the n-qubit Pauli-group operators form a basis in\nthe vector space of n-qubit Hermitian operators, we can write \u03c1 at time t = 0 as\n\u03c1(t = 0) = a 1l + b X + c Y + d Z\n(12)\nwhere a, b, c and d are real parameters which de\ufb01ne the state.\n8\n", "9": "At time t, the state has been transformed through unitary U(t). In the usual Schr\u00a8odinger\npicture one would re\ufb02ect this in a transformation of the matrix elements of the state, or,\nequivalently, of the parameters a, b, c and d to a(t), b(t), etc.. However, one can also write\n\u03c1(t) = U(t)\u03c1U(t)\u2020 = a 1l + b U(t)XU(t)\u2020 + c U(t)Y U(t)\u2020 + d U(t)ZU(t)\u2020 .\n(13)\nBy introducing time-evolving observables X(t) = U(t)XU(t)\u2020 and similar expressions\nfor Y (t) and Z(t), we can express this as\n\u03c1(t) = a 1l + b X(t) + c Y (t) + d Z(t) .\n(14)\nThe time evolution is thus captured by the evolution of these logical observables, and the\nparameters a, b, c and d remain \ufb01xed. Since X(t), Y (t), etc. de\ufb01ne the logical basis in which\n\u03c1 is expressed, we call them logical observables.\nSince Y (t) = iX(t)Z(t), determining X(t) and Z(t) speci\ufb01es the evolution U(t) com-\npletely. More generally, an n-qubit unitary is de\ufb01ned in this picture by the evolution of X(t)a\nand Z(t)a for each qubit a. It is important to emphasise that the logical observables X(t),\nY (t), and so forth, are no longer equal to the physical observables X, Y etc. which remain\nconstant in time. Here time evolution is characterized by the evolution of logical observables.\nIn analogy to the (standard) Heisenberg picture, where physical observables evolve in time,\nwe call this a logical Heisenberg picture1.\nThe logical Heisenberg picture can be illustrated with some simple examples. First, let\nus consider a Hadamard U(t) = H. This is represented in the logical Heisenberg picture\nthrough X(t) = Z and Z(t) = X. Second, let us look at the representation of the SWAP\ngate in this picture. We \ufb01nd that X1(t) = X2 and X2(t) = X1 (similarly for the Z variables).\nThe logical Heisenberg picture clearly encapsulates the action of these gates; in the case of\nthe Hadamard, we see X and Z interchanged and for SWAP, the operators on the two qubits\nare switched round. In the one-way quantum computer logical time evolution is discrete and\ndriven by single-qubit measurements, so in the following we will often suppress the time\nlabelling t.\nA logical Heisenberg picture becomes particularly useful when describing the encoding\nof quantum information. As well as density matrices, one can also represent the evolution of\npure state vectors in a logical Heisenberg picture. The time evolution is carried by the logical\nbasis states, the joint eigenstates of Z(t)a with phase relations \ufb01xed by X(t)a. Consider a\nstate |\u03c8\u27e9= \u03b1|0\u27e9+ \u03b2|1\u27e9imagine we encode it via some unitary transformation U. We would\nwrite |\u03c8\u27e9= \u03b1U|0\u27e9+ \u03b2U|1\u27e9= \u03b1|0\u2032\u27e9+ \u03b2|1\u2032\u27e9, where |0\u2032\u27e9and |1\u2032\u27e9are the new (encoded)\nlogical basis states. Thus \u201cencoding\u201d implicitly adopts a logical Heisenberg picture. The\nstate coef\ufb01cients remain constant while logical basis vectors are transformed.\n3.3\nDynamical variables on a stabilizer sub-space\nThis formalism can be combined with the stabilizer formalism to track the evolution of logical\nobservables on a sub-space of a larger system. The stabilizer group then de\ufb01nes the logical\n1In geometric terms, evolution in the Schr\u00a8odinger picture corresponds to an active transformation of a state.\nA logical Heisenberg picture corresponds to a passive transformation \u2013 the state remains \ufb01xed with respect to a\nchanging logical basis.\n9\n", "10": "sub-space, and the dynamical logical operators track the evolution of this sub-space. The\nlogical operators act only to map states around the sub-space, therefore they must commute\nwith the stabilizers of that sub-space.\nLet us use the well-known three-qubit error correcting code as an example. In this code,\nthe logical |0\u27e9is represented by |0\u27e9|0\u27e9|0\u27e9and |1\u27e9by |1\u27e9|1\u27e9|1\u27e9. The stabilizer group for this\nsub-space is generated by Z \u2297Z \u22971l and 1l \u2297Z \u2297Z. The logical observables associated\nwith this basis are Z = Z \u22971l \u22971l and X = X \u2297X \u2297X. One can easily verify that these\noperators have the desired action on the logical basis states.\nHowever, even though the logical basis is entirely symmetric under interchange of the\nqubits, the logical Z is not. Due to the symmetry of the situation one would expect that\n1l \u2297Z \u22971l and 1l \u22971l \u2297Z would be equivalent to the physical representation of Z we have\nchosen above. That these operators have the same action on the logical basis states is easy\nto con\ufb01rm and it re\ufb02ects an important characteristic of logical operators on a sub-space,\nnamely that they are not unique. Given a stabilizer operator for the sub-space Ka and logical\noperator L, the product KaL has the same action on the logical sub-space as L. Thus there\nare a number of physical representations for a given logical observable. Formally this set is\nin fact a coset of the stabilizer group. In order to de\ufb01ne this set, only one member of the set\nneed be speci\ufb01ed. When we write a particular physical operator corresponding to L this is\njust a \u201crepresentative\u201d of the whole coset.\n3.4\nOne-way patterns in the stabilizer formalism\nWe introduced the term \u201cone-way pattern\u201d to describe a layout of qubits, graph state edges\nand measurements which implements a given unitary in the one-way model. More speci\ufb01-\ncally, the patterns contain a set of qubits labelled input qubits and a set labelled output qubits,\na set of auxiliary qubits and a set of edges connecting those qubits. We will now show\nhow, using the rules for transforming stabilizer sub-spaces under measurement, that the one-\nway pattern will lead to the transformation of the logical operators Xa 7\u2192\u00b1UXa\u2032U \u2020 and\nZa 7\u2192\u00b1UZa\u2032U \u2020. This is a logical Heisenberg picture representation of the desired unitary\nU, plus the displacement of the logical state from input qubit(s) a to output qubit(s) a\u2032. The\nextra factor \u00b11 re\ufb02ects the presence of by-product operators (due to the randomness of the\nmeasurement outcomes) since XZX = \u2212Z and ZXZ = \u2212X.\n3.5\nPauli measurements\nBefore we consider one-way patterns with general one-qubit measurements, let us \ufb01rst con-\nsider patterns consisting solely of Pauli measurements. These measurements change the log-\nical variables\u2019 encoding according to the desired evolution of the logical state. As the logical\nevolution is unitary, each measurement must reveal no information about the logical state. By\nconsidering commutation relations, one can show that these requirements are equivalent to\ndemanding that the measured observable anti-commute with at least one stabilizer generator.\nThe effect of performing a measurement of a (multi-qubit) Pauli observable \u03a3 on a sub-\nspace is as follows (such methods are described in more detail in [3]). If \u03a3 does not commute\nwith the complete stabilizer group, one can always construct a set of stabilizer generators such\nthat only one of the generators Ka anti-commutes with \u03a3. The stabilizers which commute\n10\n", "11": "n input\nqubits\nn output\nqubits\n{\n{\nFigure 4:\nAny n-qubit Clifford group operation may be implemented (up to local Clifford\ncorrections) by a one-way pattern with 2n-qubits. Dotted lines represent possible edges in\nthe patterns.\nwith \u03a3 must also stabilize the transformed sub-space after the measurement, which will be\nan eigenspace of \u03a3 with eigenvalue \u00b11. Thus \u00b1\u03a3 will itself belong to the new stabilizer.\nWe can thus construct a set of generators for the stabilizer of the transformed sub-space, by\nsimply replacing Ka, which anti-commutes with \u03a3, with \u00b1\u03a3.\nThe logical observables transform in a similar way. This time, just one member of the\ncoset for each logical observable needs to be found which commutes with \u03a3. If the represen-\ntative logical operator L commutes with \u03a3 it remains a valid representative logical operator\nafter the measurement (the full coset will be different though due to the changed stabilizer).\nIf L does not commute with \u03a3, then the product LKa does commute, so logical operators for\nthe transformed sub-space are easy to \ufb01nd.\nA \ufb01nal step involves \ufb01nding a reduced description of the state which ignores the now\nunimportant measured qubit. This is achieved by choosing a set of stabilizer generators where\nall but one (\u00b1\u03a3 itself) act as the identity on the measured qubit. This is achieved by multi-\nplying all the generators not already in this form with \u00b1\u03a3. In the same way representative\nlogical operators can be chosen that are also restricted to the unmeasured qubits.\nAfter all but the designated output qubits in a pattern have been measured, the one-way\npattern has been completed. The reduced description of the output qubits has a stabilizer\ngroup consisting of the identity operator alone and logical operators have become Xa =\n\u00b1UXa\u2032U \u2020 and Za = \u00b1UZa\u2032U \u2020. We interpret this in the logical Heisenberg picture. The\none-way pattern has implemented the unitary transformation U plus known Pauli corrections\nand the logical sub-space has been physically displaced from the input qubits a to output\nqubits a\u2032.\nThis method can be used to design and verify one-way patterns (e.g. see Exercise 3). It\n11\n", "12": "2\n3\n4\n1\n2\n3\n4\n1\n2\n3\n4\n1\n2\n3\n4\n1\n2\n3\n4\n1\n2\n3\n4\n1\n2\n3\n4\n1\n2\n3\n4\n1\n2\n3\n4\n1\n2\n3\n4\n1\n2\n3\n4\n1\nNo. 1\nNo. 2\nNo. 3\nNo. 4\nNo. 5\nNo. 6\nNo. 7\nNo. 8\nNo. 9\nNo. 10\nNo. 11\nFigure 5: The full orbit of locally equivalent four-qubit graph states. Each graph state is\nobtained from the previous one by application of the \u201clocal complementation rule\u201d. This\n\ufb01gure is taken from M. Hein, J. Eisert and H.J. Briegel, Phys. Rev. A 69, 062311 (2004)\nc\u20ddAPS.\nmay seem complicated for such simple examples, but its power lies in its generality. In the\nnext section, we show how measurement patterns for arbitrary Clifford operations may be\nevaluated using these techniques.\n3.6\nPauli measurements and the Clifford group\nIn the previous section, all of the transformations of the logical observables keep their phys-\nical representations within the Pauli group. Unitary operators which map Pauli group op-\nerators to the Pauli group under conjugation are known as Clifford group operations. The\nClifford group is the group generated by the CZ, Hadamard and Uz(\u03c0/2) gates. Since all of\nthese gates can be implemented by one-way patterns with Pauli measurements only (i.e. by\nchoosing \u03c6 = 0 or \u03c6 = \u03c0/2 in \ufb01gure 3 (a)) any Clifford group operation can be achieved by\nPauli measurements alone.\nThe Clifford group plays an important role in quantum computation theory. Clifford\ngroup circuits are the basis for most quantum error correction schemes, and many interesting\nentangled states (including, of course, graph states) can be generated via Clifford group oper-\nations alone. However, Gottesman and Knill [14] showed that notwithstanding this, Clifford\ngroup circuits acting on stabilizer states (such as the standard input |0\u27e9\u2297n) can be simulated\nef\ufb01ciently on a classical computer [15, 16]. This is because of the simple way the logical\nobservables transform (in the logical Heisenberg picture) under such operations.\nLet us consider the effect of the by-product Pauli operators, generated every time a mea-\nsurement outcome is \u22121, when Clifford operations are implemented in the one-way quantum\ncomputer. Given a Clifford operation C, by the de\ufb01nition of the Clifford group, C\u03a3C\u2020 = \u03a3\u2032\nwhere \u03a3 and \u03a3\u2032 are Pauli group operators. Therefore C\u03a3 = \u03a3\u2032C meaning that interchanging\n12\n", "13": "the order of Clifford operators and Pauli corrections will leave the Clifford operation un-\nchanged. This means that there is no need to choose measurement bases adaptively. We thus\nsee that in any one-way quantum computation all Pauli measurements can be made simulta-\nneously in the \ufb01rst measurement round.\nThese results imply that Pauli measurements on stabilizer states will always leave behind\na stabilizer state on the unmeasured qubits. Additionally, any stabilizer state can be trans-\nformed to a graph state by local Clifford operations [19, 20]. Furthermore, this graph state is\nin general not unique, by further local Clifford operations a whole family of locally equiva-\nlent graph states can be achieved [7, 20]. The rules for this local equivalence are simple \u2013 a\ngraph can be transformed into another locally equivalent graph by \u201clocal complementation\u201d\n[20] which is a graph-theoretical primitive [21]. In local complementation, a particular vertex\nof the graph is singled out and the sub-graph given by all vertices connected to it is \u201ccomple-\nmented\u201d (i.e. all present edges are removed and any missing edges are created). The set of\nlocally equivalent four-qubit graph states is illustrated in \ufb01gure 5.\nThis theorem allows us to understand the effect of Pauli measurements on a graph state\nin a new way. Any Pauli measurement on a graph state simply transforms it (up to a local\nClifford correction) into another graph state. A graphical description of how the graph is\ntransformed and which local corrections must be applied can be found in [7, 18]. The rule for\nZ-measurements is simple, the measured qubit and all edges connected to it are removed from\nthe graph. If the -1 eigenvalue was measured, extra Z transformations on the adjacent qubits\nmust be applied to bring the state to graph state form. Rules for X and Y measurements are\nmore complicated and can be found in [7].\nSince the effect of Pauli measurements is to just transform the graph, given any one-way\npattern containing Pauli measurements, the transformation rules can be used to \ufb01nd a one-\nway pattern which implements the same operation with fewer qubits. The local corrections\ncan often be incorporated in the bases of remaining measurements. If not they lead to an\nadditional local Clifford transformation on the output qubit. Since the Pauli measurements\ncorrespond to the implementation of Clifford group operations, this leads to a stronger result\nthan the Gottesman-Knill theorem. All Clifford operations, wherever they occur in the quan-\ntum computation are reduced to classical pre-processing of the one-way pattern. A further\nconsequence is that any n-qubit Clifford group operation can be implemented (up to the local\nClifford corrections) on a 2n qubit pattern, as illustrated in \ufb01gure 4.\n3.7\nNon-Pauli measurements\nThe method above does not yet allow us to treat non-Pauli measurements, speci\ufb01ed by mea-\nsurement directions other than along the X-, Y - or Z-axis. However, one can still treat such\nmeasurements within the stabilizer formalism. The stabilizer eigenvalue equations (equa-\ntion (10)) can be rearranged to generate a family of non-Pauli unitary operations which also\nstabilize the sub-space [5]. Consider the state |\u03c8\u27e9stabilized by operator Z \u2297X. We rearrange\nthe stabilizer equation as follows\nZ \u2297X|\u03c8\u27e9= |\u03c8\u27e9\nZ \u22971l|\u03c8\u27e9= 1l \u2297X|\u03c8\u27e9\n(Z \u22971l \u22121l \u2297X) |\u03c8\u27e9= 0\n(15)\n13\n", "14": "thus for all \u03c6,\nexp\n\u0014\ni\u03c6\n2 (Z \u22971l \u22121l \u2297X)\n\u0015\n|\u03c8\u27e9= |\u03c8\u27e9.\n(16)\nThus we have a unitary Uz(\u2212\u03c6) \u2297Ux(\u03c6) which itself stabilizes |\u03c8\u27e9. This implies that\nUz(\u03c6) \u22971l|\u03c8\u27e9= 1l \u2297Ux(\u03c6)|\u03c8\u27e9.\n(17)\nSimilar unitaries and similar expressions can be generated from any stabilizer operator.\nWe will show in the next section, how this technique allows a simple analysis of the one-way\npattern for general unitaries diagonal in the computational basis, and in fact, the technique\nallows one to understand any one-way pattern solely within the stabilizer formalism and\nwas used to design and verify many of the gate patterns presented in [5]. This indicates\nthat the effect of non-Pauli measurements in a one-way quantum computation can always\nbe understood as the implementation of a generalized rotation exp[\u2212i(\u03c6/2)\u03a3] where \u03a3 can\nbe any n-qubit Pauli group operator. We shall discuss the consequences of this further in\nsection 3.9.\n3.8\nDiagonal unitaries\nEarlier in the chapter we saw that a CZ gate can be implemented such that the input qubit is\nalso the output qubit. Coinciding input and output qubits in a one-way pattern reduces the\nsize of the pattern so it is natural to ask which unitaries can be implemented this way and one\ncan show (see exercise 4) that it is only those unitaries diagonal in the computational-basis.\nIn fact, there is a simple one-way pattern for any diagonal unitary transformation. Any such\nn-qubit operator can be written (up to a global phase) in the following form\nDn =\nY\n\u20d7m\nexp[i\u03c6\u20d7m\n2 (Z1)m1(Z2)m2 \u00b7 \u00b7 \u00b7 (Zn)mn]\n(18)\nwhere (Za)ma is equal to the identity if ma = 0 and Z acting on qubit a when ma = 1, and\nthe sum is over all binary vectors \u20d7m of length n.\nEach element of this product is a generalized rotation acting on a subset of the qubits\nand has a very simple implementation in the one-way quantum computer. To illustrate this,\nconsider the two-qubit transformation e\u2212i \u03c6\n2 Z\u2297Z. This can be implemented on a one-way\npattern with three qubits as illustrated in \ufb01gure 6. In this pattern the qubits labelled 1 and\n2 are the joint input-output qubits, and qubit a is an ancilla. The entanglement graph has\ntwo edges connecting a to 1 and 2. A measurement in basis (\u2212\u03c6, \u2212\u03c0/2), i.e. of observable\nUx(\u2212\u03c6)ZUx(\u03c6), implements e\u2212i \u03c6\n2 Z1Z2 on the input state, with by-product operator Z1Z2.\nTo see this, we recall that the stabilizer for the sub-space corresponding to such a graph\nis XaZ1Z2. The corresponding eigenvalue equation can be transformed, as described in the\nprevious section, to generate the stabilizing unitary [Ux(\u03b8)]aei \u03b8\n2 Z1Z2. Measuring qubit a in\nbasis (\u2212\u03c6, \u2212\u03c0/2) is equivalent to performing [Ux(\u03c6)]a and then measuring Za, hence the\none-way pattern implements the logical unitary e\u2212i \u03c6\n2 Z1Z2.\n14\n", "15": "Figure 6: The one-way pattern which implements the unitary \u201cdouble-z rotation\u201d e\u2212i \u03b8\n2 Z\u2297Z.\nNote that input and output qubits coincide.\nFigure 7:\nArbitrary diagonal unitaries, may be implemented in a single round of measure-\nments by measurement patterns with coinciding input and output qubits. This example shows\nan arbitrary diagonal three-qubit unitary exp[ i\n2(\u03b81Z \u22971l \u22971l + \u03b821l \u2297Z \u22971l + \u03b831l \u22971l \u2297Z +\n\u03b84Z \u22971l \u2297Z + \u03b85Z \u2297Z \u22971l + \u03b861l \u2297Z \u2297Z + \u03b87Z \u2297Z \u2297Z)]. For example, by setting the\nangles to \u03b81 = \u03b82 = \u03b83 = \u03b87 = \u2212\u03c0/4 and \u03b84 = \u03b85 = \u03b86 = \u03c0/4, we obtain a control-control\nZ gate or \u201cToffoli-Z gate\u201d. See [5] for a cluster-state implementation of this gate.\n15\n", "16": "We can generalize this pattern to quite general n-qubit diagonal unitaries. (Verify this in\nexercise 5). For example, the pattern for an arbitrary diagonal three-qubit unitary is given in\n\ufb01gure 7. This is a highly parallelized and ef\ufb01cient implementation of the unitary2.\nSince the by-product operators for these patterns are diagonal themselves they commute\nwith the desired logical diagonal unitaries. Thus there is no dependency in the measure-\nment bases on the outcome of measurements within this pattern and all measurements can\nbe achieved in a single measurement round. Thus, not only can a quantum circuit consisting\nof Clifford gates alone be implemented in a single-time step \u2013 this is true for any diagonal\nunitary followed by a Clifford network.\n3.9\nGate patterns beyond the standard network model \u2013 CD-decomposition\nWe have seen that one can construct one-way patterns to implement a unitary operation de-\nscribed by a quantum circuit by simply connecting together patterns for the constituent gates.\nFurthermore, such patterns can be made more compact by evaluating the graph state trans-\nformations corresponding to any Pauli measurements present. This can change the structure\nof the pattern such that the original circuit is hard to recognize (see for example, the quantum\nFourier transform patterns in [7]).\nWe have also seen that non-Pauli measurements in a measurement pattern lead to gen-\neralized rotations on the logical state of the form exp[\u2212(i/2)\u03c6\u03a3] where \u03a3 is some Pauli\ngroup operator.\nThe implementation of any non-Clifford unitary on the one-way quan-\ntum computer is thus best understood as a sequence of operators of this form. Two such\noperators exp[\u2212(i/2)\u03c6\u03a3] and exp[\u2212(i/2)\u03c6\u2032\u03a3\u2032] may, if [\u03a3, \u03a3\u2032] = 0 be combined to give\nexp[\u2212(i/2)[\u03c6\u03a3 + \u03c6\u2032\u03a3\u2032]. In general, any operators of the form exp[(i/2)[P\na \u03b1a\u03a3a], where\n[\u03a3a, \u03a3a\u2032] = 0, can be diagonalized by a Clifford group element C to CDC\u2020, where D is a\ndiagonal unitary. Composing two operations this form, e.g C1D1C\u2020\n1 and C2D2C\u2020\n2 will give\nC1D1C\u2020\n1C2D2C\u2020\n2 = C1D1C3D2C\u2020\n2 where C3 = C\u2020\n1C2, and we call the casting of a unitary\nin this form a CD-decomposition.\nThere are several observations to be made about such decompositions. We have already\nseen that both diagonal unitaries and Clifford group operations have compact implementa-\ntions in one-way quantum computations. This means that CD-decompositions are very use-\nful in the design of compact one-way patterns. One simply combines te one-way patterns for\ndiagonal unitaries presented above with patterns for Clifford operations, which we have seen\nrequire at most 2n qubits for an n-qubit operation and which can be constructed either by em-\nploying Pauli transformation rules on a pattern for a network of CZ, Hadamard and Uz(\u03c0/2)\ngates, or by inspection of the logical Heisenberg form of the operation. In [5] this decompo-\nsition, together with stabilizer techniques described above, was used to design cluster-state\nimplementations for several gates and simple algorithms including controlled Z-rotations and\nthe quantum Fourier transform (QFT).\nA further advantage in working with a CD-decomposition is that it immediately provides\nan upper bound in the number of time steps needed for the implementation of the one-way\n2This is reminiscent of the results reported in [22] regarding the parallelization of diagonal unitaries, where,\nhowever a different de\ufb01nition of parallelization is used. We treat the CZ operations generating the graphs state as\noccurring in a single time-step. Physically this is entirely reasonable as operations generated by commuting Hamil-\ntonians can often be implemented simultaneously as we shall see in our discussion of optical lattices in section 4.\n16\n", "17": "pattern. This is simply the number of \u201cCD units\u201d in the decomposition. We saw in section 3.8\nthat a single CD unit can be implemented in a single time step. Each CD unit in turn will cre-\nate by-product operators, which may need to be accounted for in the choice of measurement\nbases for following diagonal unitaries. A decomposition which minimised the number of CD\nunits would give a (possibly tight) upper bound on the minimal number of time-steps and\nwould be one measure of how hard the unitary is to implement in the one-way model. For\nexample, Euler\u2019s rotation theorem tells us that the optimal CD-decomposition for an arbitrary\nrotation consists of three CD units and correspondingly requires three measurement rounds\nfor implementation on the one-way quantum computer.\nNote that there is considerable freedom in choosing a CD form. For example, one can\nconstruct the decomposition such that all the diagonal gates are solely local, single-qubit\noperations and only the Clifford gates are non-local. This gives a degree of \ufb02exibility in the\ndesign one-way patterns.\nQuantum circuits described in terms of Clifford group gates plus rotations can readily\ncast in CD form by decomposing the rotations into Z-axis rotations and Hadamards. One can\nthen reduce the size of the corresponding pattern by applying the Pauli measurement trans-\nformation rules3. Quantum circuits for the simulation of general Hamiltonians are usually\nexpressed using the Trotter formula (see [3]) which leads to unitaries which are a sequence\nof generalized rotations which can be cast in CD form in a straightforward manner. Thus\nthe one-way quantum computer is very well suited to Hamiltonian simulation (see e.g. [23]),\nwhich will be an important application of quantum computers.\n4\nImplementations\n4.1\nOptical lattices\nBeyond its theoretical value, there are a number of physical implementations where one-way\nquantum computation gives distinct practical advantages. One of these is in systems where\ngraph states or cluster states can be generated ef\ufb01ciently, such as \u201coptical lattices\u201d. In an\noptical lattice, cold neutral atoms are trapped in a lattice structure, given by the periodic\npotential due to a set of superposed laser \ufb01elds. The potential \u201cseen\u201d by each atom depends\non its internal state. This means that neighbouring atoms in different states can be brought\nclose together by changing the relative positions of the minima of the periodic potentials,\nleaving an interaction phase on the atoms\u2019 state [24]. If this is timed such that this interaction\nphase is \u22121 the process implements, essentially, a CZ gate between the two atoms. However,\nevery atom in the lattice will be affected when these potentials move and thus CZ gates can\nbe implemented between neighbouring qubits across the lattice simultaneously. Thus, by\npreparing all atoms in a superposition of these internal states beforehand, a very large cluster\nstate can be generated very ef\ufb01ciently. In recent years there has been much progress in the\ngeneration and manipulation of ultra-cold atoms in optical lattices in the laboratory [25], and\na number of schemes for the generation of arbitrary graph states in these systems have been\n3It is important to note, however, that the Pauli measurement rules alone do not usually provide a CD-\ndecomposition which is optimal in the sense of consisting of the smallest number of CD units. An optimal CD-\ndecomposition will allow the construction of a one-way pattern for the unitaries with fewer measurement rounds,\nand often a more compact entanglement graph, than application of the Pauli transformation rules alone.\n17\n", "18": "proposed [26]. Possibly the most dif\ufb01cult obstacle to overcome for the implementation of\none-way quantum computation in optical lattices is the dif\ufb01culty in addressing individual\natoms in the lattice.\n4.2\nLinear optics and cavity QED\nPhotons make excellent carriers on quantum information and are relatively decoherence free.\nA key dif\ufb01culty in implementing universal quantum computation using photons is that two-\nqubit gates such as CZ cannot be implemented by the simple linear optical elements of the\noptics laboratory (e.g. beam-splitters and phase shifters) alone. By employing photon num-\nber measurements, non-deterministic entangling gates are possible. Most times, however,\nthe gate fails, and this failure leads to the measurement of the qubits\u2019 state which disrupts\nthe computation. Naively, one would expect that scaling this up into a circuit would lead\nto an exponential decrease in success probability, but, by using a combination of techniques\nincluding gate teleportation [27] and error correction, scalable quantum computation is in-\ndeed possible [28]. A key disadvantage of this particular approach, however, is that each gate\nrequires a large number of ancilla photons in a dif\ufb01cult-to-prepare entangled state.\nA much more ef\ufb01cient strategy is to use the non-deterministic gates to build an entangled\nresource state for measurement-based quantum computation [29, 30]. Cluster states can be\ngenerated ef\ufb01ciently [31] using so-called \u201cfusion operations\u201d, which can be performed (non-\ndeterministically) with simple linear optics. Fusion operations [31, 32] are implementations\nof operators such as |0\u27e9\u27e800| + |1\u27e9\u27e811|, which when applied to two qubits in different graph\nstates, replace both qubits by a single one which inherits all the graph state edges of each,\nthus \u201cfusing\u201d the two graph states together. Recently, three and four-qubit graph states have\nbeen created in the laboratory using methods based on down-conversion and post-selection\n[33] and fusion measurements [34]. Single-qubit measurements on these states demonstrated\nmany of the key elements of one-way quantum computation [33]. More details of linear\noptical quantum computation can be found in other chapters of this book and in a recent\nreview [35].\nQuantum computation with photons is not the only scenario where gates are inherently\nnon-deterministic. Similar techniques can be used to implement non-deterministic gates be-\ntween atoms or ions trapped in separate cavities. Cavity QED implementations of the one-\nway quantum computer is a fast-developing area and recently there have been a number of\npromising experimental proposals [36].\n5\nRecent developments\nIn addition to these developments toward the implementation of one-way quantum computa-\ntion there have been a number of interesting papers exploring its theoretical structure. The re-\nlationship between the one-way quantum computer and other models of measurement-based\nquantum computation [37, 27] has been explored in [38, 39, 40, 32] and an algebraic repre-\nsentation of one-way graph measurement patterns [12] has been developed. The simulability\nof one-way quantum computations with one-way patterns of various depths and geometries\nhas been investigated [41, 8]. Looking beyond qubit implementations, an analogue of graph\n18\n", "19": "states in continuous-variable harmonic oscillator systems [42] has been investigated and gen-\neralizations of one-way quantum computation to d-level systems [43] have been explored.\nA version of one-way quantum computation based on three-qubit interactions has been pro-\nposed [44].\nAny practical quantum computation proposal must be able to function in the presence\nof a degree of experimental noise and decoherence. Standard approaches to fault-tolerant\nquantum computation have been \ufb01rmly rooted in the network model and it was not clear\nwhether they would translate to the one-way model. It was shown in [45] and later [46]\nthat physical errors in the one-way quantum computer would be manifested as logical errors\nquite different from those that one would expect in a standard gate network implementation.\nNevertheless for a number of physically reasonable independent noise models there is an error\nthreshold below which fault-tolerant quantum computation is possible [45, 46]. A simple\nproof of this for both Markovian and non-Markovian local errors is presented in [47]. The\nimplementation of these techniques in linear optical quantum computation has been simulated\n[48], leading to estimated error thresholds of around 0.0001 for depolarisation errors and\n0.003 for loss.\nRecently, a different approach to fault-tolerance in the one-way model has been taken.\nMost quantum error correcting code-words are stabilizer states, and as we have seen, every\nstabilizer state is locally equivalent to a graph state. It is therefore natural to look for error\ncorrection schemes which make use of the natural error correcting properties of the graph\nstate. It has been demonstrated that one-way quantum computation with a high degree of\nrobustness against qubit loss errors (the most signi\ufb01cant error source in linear optical quantum\ncomputation) can be acheived by using a graph states with a tree-like structure [49]. This\nscheme tolerates losing up to half of the qubits in the graph state, and can be applied to deal\nwith photon loss errors in linear optical proposals [50].\nMost recently, it was shown [51] that a three-dimensional body-centred cubic lattice clus-\nter state has the properties of a topological surface code. By combining ideas from topolog-\nical quantum computation with the observation that quantum Reed-Muller codes [52] allow\nfault-tolerant non-Pauli measurements of logical qubits to be implemented by local mea-\nsurements, a fully fault-tolerant scheme was presented [51] with estimated error thresholds\nbetween 0.001 and 0.01.\n6\nOutlook\nIn this chapter, we have given an introduction to the key ideas of one-way quantum computa-\ntion and some of the most useful mathematical techniques for describing and understanding\nit. The one-way approach has provided a new paradigm for quantum computation which is\ncasting many questions of quantum computation theory in a new light. It is leading to exper-\nimental implementations that are radically different from early ideas about how a quantum\ncomputer would operate. In addition, it is likely that there will be further physical systems\nin which the one-way model offers the most achievable path to quantum computation. Not\nleast, the success of the one-way approach illustrates the power of novel representations of\nquantum information processing and should encourage us to look for other new and distinct\nmodels of quantum computation.\n19\n", "20": "Acknowledgements\nDan Browne is supported by Merton College, Oxford and EPSRC\u2019s QIPIRC programme.\nHans Briegel is supported by the Austrian Science Fund (FWF), the German Science Foun-\ndation (DFG), and by the European Union through projects QLAQUI and SCALA.\nWe would like to thank Robert Raussendorf for many insightful discussions over a num-\nber of years, which have helped to shape our perspective of one-way quantum computation.\nDan would like to thank Sean Barrett, Simon Benjamin, Michael Bremner, Jens Eisert, Joe\nFitzsimons, Elham Kashe\ufb01, Pieter Kok, Michael Nielsen, Terry Rudolph and Michael Var-\nnava for some illuminating discussions about one-way quantum computation. Hans would\nlike to thank the Kavli Institute for Theoretical Physics (KITP) for their hospitality and sup-\nport while the \ufb01nal part of this work was completed. We would like to thank Earl Campbell\nfor helpful comments on the manuscript.\nExercises\n1. There are only two topologically distinct three-qubit graph states. In one, the qubits\nform a linear three qubit cluster state, in the other, the qubits are connected in a trian-\ngle. Write down the stabilizer generators for these two states and hence also the full\nstabilizer group for each. Now show that one can transform between these two states\nby a local Clifford operator.\n2. Prove that, to generate the stabilizer group for a k-qubit stabilizer sub-space in an n\nqubit system, (n \u2212k) generators are required.\n3. Consider the one-way pattern illustrated in \ufb01gure 3(a) with angle \u03c6 set to zero. Show\nthat after the entangling CZ operation, but before the measurement, the logical opera-\ntors X and Z have physical representations X \u2297Z and Z \u22971l respectively. Find the\nstabilizer and hence the full coset of each logical observable. When observable X is\nmeasured on the \ufb01rst qubit, how are the stabilizer and logical observables transformed?\nHence verify that this pattern implements a Hadamard gate.\n4. Show that one-way patterns where all input and output qubits coincide can only imple-\nment diagonal unitaries. What can one say about patterns where only some of the input\nand output qubits coincide?\n5. Using the decomposition of an arbitrary n-qubit diagonal unitary Dn in equation (18)\nand by generalising the methods in section 3.8 describe a one-way pattern which im-\nplements Dn requiring a total of n + (2n \u22121) qubits.\n6. Verify the effect of applying the \u201cfusion\u201d operator |0\u27e9\u27e80|\u27e80| + |1\u27e9\u27e81|\u27e81| to two qubits,\neach of which belong to seperate graph states. What happens when a projection onto\nthe even-parity sub-space |0\u27e9|0\u27e9\u27e80|\u27e80| + |1\u27e9|1\u27e9\u27e81|\u27e81| is applied instead?\n7. Consider a qubit that is prepared in an unknown state, and a one-dimensional cluster\nstate. What is the effect of applying a fusion operator on the unknown qubit and the\n20\n", "21": "qubit at one end of the cluster state. How can the fusion operator be used to \u201cinput\u201d\nexternally provided states into a one-way quantum computation?\nReferences\n[1] D. Deutsch, Proc. R. Soc. London, Ser. A 425, 73 (1990).\n[2] A. Barenco et al., Phys. Rev. A 52 3457 (1995).\n[3] M.A. Nielsen and I. Chuang, M.A. Nielsen I.L. Chuang. Quantum Computation and\nQuantum Information, (Cambridge University Press, Cambridge, 2000).\n[4] R. Raussendorf and H. J. Briegel, Phys. Rev. Lett. 86, 5188 (2001).\n[5] R. Raussendorf, D.E. Browne and H.J. Briegel, Phys. Rev. A 68, 022312 (2003).\n[6] H. J. Briegel and R. Raussendorf, Phys. Rev. Lett. 86, 910 (2001).\n[7] M. Hein, J. Eisert and H.J. Briegel, Phys. Rev. A 69, 062311 (2004).\n[8] M.A. Nielsen, e-print quant-ph/0504097, to appear in Rev. Math. Phys.\n[9] R. Jozsa, e-print quant-ph/0508124.\n[10] M. Hein et al., e-print quant-ph/0602096.\n[11] R. Raussendorf and H.J. Briegel, Quant. Inf. Comp. 6, 433 (2002); R. Raussendorf,\nD.E. Browne and H.J. Briegel, Journal of Modern Optics 49, 1299 (2002).\n[12] V. Danos, E. Kashe\ufb01and P. Panangaden, eprint: quant-ph/0412135; V. Danos, E.\nKashe\ufb01, and P. Panangaden Phys. Rev. A 72, 064301 (2005).\n[13] D. Gottesman, Stabilizer codes and quantum error correction, quant-ph/9705052, PhD\nThesis, California Insitute of Technology (1997).\n[14] D. Gottesman, The Heisenberg Representation of Quantum Computers, Proceedings\nof the XXII International Colloquium on Group Theoretical Methods in Physics 32\n(Cambridge, MA, International Press, 1999).\n[15] S. Aaronson and D. Gottesman, Phys. Rev. A 70, 052328 (2004).\n[16] S. Anders and H.J. Briegel, Phys. Rev. A 73, 022334 (2006).\n[17] C. Cohen-Tannoudji et al., Quantum Mechanics Volume 1, (Wiley, 1978).\n[18] D. Schlingemann, Quant. Inf. Comp. 2, 307 (2002); D. Schlingemann, Quant. Inf.\nComp. 4, 287 (2004).\n[19] D. Schlingemann, e-print quant-ph/0111080; M. Grassl, A. Klappenecker, and M. Roet-\nteler, IEEE International Symposium on Information Theory, 45 (Lausanne, 2001).\n21\n", "22": "[20] M. Van den Nest, J. Dehaene and B. De Moor, Phys. Rev. A 69, 022316 (2004).\n[21] A. Bouchet, Combinatorica 11 314 (1991).\n[22] C. Moore and M. Nilsson, SIAM Journal on Computing 31, 799 (2002).\n[23] W. D\u00a8ur, M. Bremner and H.J. Briegel, in preparation.\n[24] D. Jaksch et al., Phys. Rev. Lett. 82, 1975 (1999).\n[25] M. Greiner et al., Nature (London) 415, 39 (2002); M. Greiner et al., Nature (London)\n419, 51 (2002); O. Mandel et al., Phys. Rev. Lett. 91, 010407 (2003); O. Mandel et al.,\nNature (London) 425, 937 (2003).\n[26] S.R. Clark, C. Moura Alves, D. Jaksch, New J. Phys. 7, 124 (2005); A. Kay, J. K.\nPachos, and C. S. Adams, Phys. Rev. A 73, 022310 (2006).\n[27] D. Gottesman and I.L. Chuang, Nature (London) 402, 390 (1999).\n[28] E. Knill, R. La\ufb02amme and G. Milburn, Nature (London) 409, 46 (2001).\n[29] N. Yoran and B. Reznik, Phys. Rev. Lett 91, 037903 (2003).\n[30] M.A. Nielsen, Phys. Rev. Lett. 93 040503 (2004).\n[31] D.E. Browne and T. Rudolph, Phys. Rev. Lett. 95 10501 (2005).\n[32] F. Verstraete, J.I. Cirac, Phys. Rev. A 70, 060302(R) (2004).\n[33] P. Walther et al., Nature (London) 434, 169 (2005).\n[34] A-N. Zhang et al., Phys. Rev. A 73, 022330 (2006).\n[35] P. Kok et al., e-print quant-ph/0512071.\n[36] S.D. Barrett and P. Kok, Phys. Rev. A 71, 060310(R) (2005); Y.L. Lim, A. Beige and\nL.C. Kwek, Phys. Rev. A 73, 012304 (2006); J. Cho, H.-W. Lee, Phys. Rev. Lett. 95,\n160501 (2005).\n[37] M.A. Nielsen, Phys. Lett. A. 308, 96 (2003); D. Leung, e-print quant-ph/0111122.\n[38] P. Jorrand and S. Perdrix, e-print: quant-ph/0404125.\n[39] P. Aliferis and D. W. Leung, Phys. Rev. A 70, 062314 (2004).\n[40] A.M. Childs, D.W. Leung and M.A. Nielsen, Phys. Rev. A 71, 032318 (2005).\n[41] I. Markov and Y. Shi, e-print quant-ph/0511069; N. Yoran and A.J. Short, Phys. Rev.\nLett. 96, 170503 (2006).\n[42] J. Zhang, e-print quant-ph/0501112; J. Zhang and S. Braunstein, Phys. Rev. A 73,\n032318 (2006).\n22\n", "23": "[43] D.L. Zhou et al., Phys. Rev. A. 68, 062303 (2003); W. Hall, e-print quant-ph/0512130;\nS. Clark, J. Phys. A: Math. Gen. 39, 2701 (2006).\n[44] M.S. Tame et al., Phys. Rev. A 73, 022309 (2006).\n[45] R. Raussendorf, PhD Thesis, Ludwig-Maximilians University, Munich (2003), online\nat http://edoc.ub.unimuenchen. de/archive/00001367/.\n[46] M. Nielsen and C. Dawson, Phys. Rev. A 71, 042323 (2005).\n[47] P. Aliferis and D.W. Leung, Phys. Rev. A 73, 032308 (2006).\n[48] C.M. Dawson, H.L. Haselgrove, M.A. Nielsen, Phys. Rev. Lett. 96, 020501 (2006).\n[49] M. Varnava, D.E. Browne, T. Rudolph, Phys. Rev. Lett. 97, 120501 (2006).\n[50] M. Varnava, D.E. Browne, T. Rudolph, in preparation (2006).\n[51] R. Raussendorf, J. Harrington and K. Goyal, e-print quant-ph/0510135.\n[52] S. Bravyi and A. Kitaev, Phys. Rev. A 71, 022316 (2005).\n23\n"}